/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbl.view;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import pbl.controller.ControllerJogo;
import pbl.model.jogo.Peao;

/**
 *
 * @author marcos
 */
public class Tabuleiro extends javax.swing.JPanel {

    /**
     * Creates new form Tabuleiro
     */
    private final ControllerJogo controllerJogo;
    private List<Peao> peoes;
    private Tabuleiro tabuleiro;
    private JLabel imagemFundo;
    private Peao peaoPrincipal;

    public Tabuleiro() {
        initComponents();
        this.peoes = new ArrayList<>();
        this.controllerJogo = ControllerJogo.getInstance();
        
        adicionarPeoesTabuleiro();
        gerarGUI();
    }

    public void adicionarPeoesTabuleiro() {
        if (controllerJogo.getJogador() != null) {
            this.peaoPrincipal = controllerJogo.getJogador().getPeao();
            this.removeAll();
            this.add(peaoPrincipal);
            this.peoes = controllerJogo.getPeoes();
            for (Peao peao : peoes) {
                this.add(peao);
            }
            this.validate();
            repaint();
        }
    }

    @Override
    public void paintComponent(Graphics g) {
        //Desenhando tabuleiro;
        Graphics2D g2d = (Graphics2D) g;
        super.paintComponent(g);
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); //Deixa mais bonitinho
        g.setColor(Color.black);
        //Retangulo laterais
        g.drawRect(0, 0, 720, 480);
        //Linha verticais
        g.drawLine(102, 0, 102, 480);
        g.drawLine(204, 0, 204, 480);
        g.drawLine(306, 0, 306, 480);
        g.drawLine(408, 0, 408, 480);
        g.drawLine(510, 0, 510, 480);
        g.drawLine(612, 0, 612, 480);
        //Linha horizontais
        g.drawLine(0, 96, 720, 96);
        g.drawLine(0, 192, 720, 192);
        g.drawLine(0, 288, 720, 288);
        g.drawLine(0, 384, 720, 384);
        
        //Escrevendo nomes
        g.drawString("00", 1, 10);
        g.drawString("01", 102, 10);
        g.drawString("02", 205, 10);
        g.drawString("03", 307, 10);
        g.drawString("04", 409, 10);
        g.drawString("05", 511, 10);
        g.drawString("06", 613, 10);
        
        g.drawString("07", 1, 107);
        g.drawString("08", 102, 107);
        g.drawString("09", 205, 107);
        g.drawString("10", 307, 107);
        g.drawString("11", 409, 107);
        g.drawString("12", 511, 107);
        g.drawString("13", 613, 107);
        
        g.drawString("14", 1, 203);
        g.drawString("15", 102, 203);
        g.drawString("16", 205, 203);
        g.drawString("17", 307, 203);
        g.drawString("18", 409, 203);
        g.drawString("19", 511, 203);
        g.drawString("20", 613, 203);
        
        g.drawString("21", 1, 299);
        g.drawString("22", 102, 299);
        g.drawString("23", 205, 299);
        g.drawString("24", 307, 299);
        g.drawString("25", 409, 299);
        g.drawString("26", 511, 299);
        g.drawString("27", 613, 299);
        
        g.drawString("28", 1, 395);
        g.drawString("29", 102, 395);
        g.drawString("30", 205, 395);
        g.drawString("31", 307, 395);
       
    }

    private void gerarGUI() {
        this.setLayout(null);
        this.setBackground(Color.white);
        this.setSize(480, 720);
    }

    public void atualizarTabuleiro() {
        if(this.peaoPrincipal != controllerJogo.getJogador().getPeao())
            adicionarPeoesTabuleiro();
        if(!this.peoes.equals(controllerJogo.getPeoes())){
            adicionarPeoesTabuleiro();
        }
        repaint();
//        imagemFundo.repaint();
    }

    private void removerPeao(Peao p) {
        this.remove(p);
        this.validate();
    }

    private void limparTabuleiro() {

        this.removeAll();
        this.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    void adicionarPeao(Peao p) {
        this.peoes.add(p);
        adicionarPeoesTabuleiro();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
